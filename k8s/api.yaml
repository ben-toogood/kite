apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api
  namespace: default
  labels:
    name: api
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - api.deploy.wtf
    secretName: deploy-api-tls
  rules:
    - host: "api.deploy.wtf"
      http:
        paths:
        - backend:
            serviceName: api
            servicePort: http
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: default
  labels:
    name: api
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    name: api
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: api
  labels:
    name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      name: api
  template:
    metadata:
      labels:
        name: api
    spec:
      containers:
        - name: kite
          image: eu.gcr.io/kite-prod-297314/api:18
          imagePullPolicy: IfNotPresent
          env:
            - name: JAEGER_SERVICE_NAME
              value: api
            - name: JAEGER_AGENT_HOST
              value: jaeger-agent
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
            - name: PUBLIC_KEY_FILEPATH
              value: "/jwt/tls.crt"
          volumeMounts:
            - name: jwt
              mountPath: "/jwt"
              readOnly: true
          ports:
            - containerPort: 8080
              name: http
      volumes:
        - name: jwt
          secret:
            secretName: kite-jwt
